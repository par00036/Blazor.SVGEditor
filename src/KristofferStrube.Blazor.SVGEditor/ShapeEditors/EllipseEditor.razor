@inherits ShapeEditor<Ellipse>

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@SVGElement MouseButtonTrigger="SVGElement.ShouldTriggerContextMenu ? MouseButtonTrigger.Right : (MouseButtonTrigger)4">
   <ellipse @ref=ElementReference
   @onfocusin="FocusElement"
   @onfocusout="UnfocusElement"
   @onpointerdown="SelectAsync"
   @onkeyup="KeyUp"
            tabindex="@(SVGElement.IsChildElement ? -1 : 0)"
            cx=@SVGElement.Cx.AsString()
            cy=@SVGElement.Cy.AsString()
            rx=@SVGElement.Rx.AsString()
            ry=@SVGElement.Ry.AsString()
            stroke="@SVGElement.Stroke"
            stroke-width="@SVGElement.StrokeWidth"
            stroke-linecap="@SVGElement.StrokeLinecap.AsString()"
            stroke-linejoin="@SVGElement.StrokeLinejoin.AsString()"
            stroke-dasharray="@SVGElement.StrokeDasharray"
            stroke-dashoffset="@SVGElement.StrokeDashoffset.AsString()"
            fill="@SVGElement.Fill">
      @foreach (BaseAnimate animate in SVGElement.AnimationElements)
      {
            var Parameters = new Dictionary<string, object> { { "SVGElement", animate } };
            <DynamicComponent Type=animate.Presenter Parameters=Parameters />
      }
   </ellipse>
    @if (SVGElement.Selected && SVGElement.SVG.EditMode != EditMode.Add)
    {
        <Anchor OnPointerDown="() => AnchorSelect(0)" Position="(SVGElement.Cx + SVGElement.Rx, SVGElement.Cy)" />
        <Anchor OnPointerDown="() => AnchorSelect(1)" Position="(SVGElement.Cx - SVGElement.Rx, SVGElement.Cy)" />
        <Anchor OnPointerDown="() => AnchorSelect(2)" Position="(SVGElement.Cx, SVGElement.Cy + SVGElement.Ry)" />
        <Anchor OnPointerDown="() => AnchorSelect(3)" Position="(SVGElement.Cx, SVGElement.Cy - SVGElement.Ry)" />
    }
</ContextMenuTrigger>